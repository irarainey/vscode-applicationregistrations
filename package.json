{
  "name": "applicationregistrations",
  "displayName": "Azure Application Registrations",
  "description": "An extension to manage Azure Application Registrations.",
  "icon": "resources/images/app.png",
  "publisher": "irarainey",
  "author": {
    "name": "Ira Rainey",
    "email": "ira.rainey@microsoft.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/irarainey/vscode-applicationregistrations"
  },
  "galleryBanner": {
    "color": "#3a3d41",
    "theme": "dark"
  },
  "homepage": "https://github.com/irarainey/vscode-applicationregistrations/blob/main/README.md",
  "license": "SEE LICENSE IN LICENSE.md",
  "version": "0.5.0",
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Azure",
    "Other"
  ],
  "keywords": [
    "Azure",
    "Application Registrations"
  ],
  "activationEvents": [
    "onView:appRegistrations"
  ],
  "main": "./dist/extension.js",
  "extensionDependencies": [
    "ms-vscode.vscode-node-azure-pack"
  ],
  "contributes": {
    "configuration": {
      "title": "Azure Application Registrations",
      "properties": {
        "applicationregistrations.maximumApplicationsShown": {
          "type": "number",
          "description": "The maximum number of application registrations to be shown in the view.",
          "default": 40,
          "minimum": 1,
          "maximum": 200,
          "order": 0
        },
        "applicationregistrations.showOwnedApplicationsOnly": {
          "type": "boolean",
          "description": "Show only applications owned by the current user.",
          "default": true,
          "order": 1
        },
        "applicationregistrations.useEventualConsistency": {
          "type": "boolean",
          "description": "Use the eventual consistency header on Graph API calls for generating the application list. Enable this if you are working with a large number of applications.",
          "default": true,
          "order": 2
        },
        "applicationregistrations.showApplicationCountWarning": {
          "type": "boolean",
          "description": "Displays a warning when loading the application list if it is detected that you could benefit from a change in the eventual consistency setting.",
          "default": true,
          "order": 3
        },
        "applicationregistrations.maximumQueryApps": {
          "type": "number",
          "description": "Maximum Graph API query size when not working with eventual consistency. Lower this number to improve performance when you don't have a large number of applications, but bear in mind that without eventual consistency Graph API results are not sorted so setting this below your total applications means you might not see all expected applications.",
          "default": 100,
          "minimum": 1,
          "maximum": 200,
          "order": 4
        }
      }
    },
    "views": {
      "azure": [
        {
          "id": "appRegistrations",
          "name": "Application Registrations"
        }
      ]
    },
    "commands": [
      {
        "command": "appRegistrations.uploadKeyCredential",
        "title": "Upload"
      },
      {
        "command": "appRegistrations.deleteKeyCredential",
        "title": "Delete"
      },
      {
        "command": "appRegistrations.addSingleScopeToExisting",
        "title": "Add"
      },
      {
        "command": "appRegistrations.addSingleScope",
        "title": "Add"
      },
      {
        "command": "appRegistrations.removeSingleScope",
        "title": "Remove"
      },
      {
        "command": "appRegistrations.removeApiScopes",
        "title": "Remove"
      },
      {
        "command": "appRegistrations.addExposedApiScope",
        "title": "Add"
      },
      {
        "command": "appRegistrations.editExposedApiScope",
        "title": "Edit"
      },
      {
        "command": "appRegistrations.deleteExposedApiScope",
        "title": "Delete"
      },
      {
        "command": "appRegistrations.enableExposedApiScope",
        "title": "Enable"
      },
      {
        "command": "appRegistrations.disableExposedApiScope",
        "title": "Disable"
      },
      {
        "command": "appRegistrations.addAppRole",
        "title": "Add"
      },
      {
        "command": "appRegistrations.editAppRole",
        "title": "Edit"
      },
      {
        "command": "appRegistrations.deleteAppRole",
        "title": "Delete"
      },
      {
        "command": "appRegistrations.enableAppRole",
        "title": "Enable"
      },
      {
        "command": "appRegistrations.disableAppRole",
        "title": "Disable"
      },
      {
        "command": "appRegistrations.addRedirectUri",
        "title": "Add"
      },
      {
        "command": "appRegistrations.editRedirectUri",
        "title": "Edit"
      },
      {
        "command": "appRegistrations.deleteRedirectUri",
        "title": "Delete"
      },
      {
        "command": "appRegistrations.deleteAllRedirectUris",
        "title": "Delete All"
      },
      {
        "command": "appRegistrations.copyRedirectUri",
        "title": "Copy"
      },
      {
        "command": "appRegistrations.editAppIdUri",
        "title": "Edit"
      },
      {
        "command": "appRegistrations.copyAppIdUri",
        "title": "Copy"
      },
      {
        "command": "appRegistrations.removeAppIdUri",
        "title": "Remove"
      },
      {
        "command": "appRegistrations.addPasswordCredential",
        "title": "Add"
      },
      {
        "command": "appRegistrations.deletePasswordCredential",
        "title": "Delete"
      },
      {
        "command": "appRegistrations.viewAppManifest",
        "title": "View Manifest"
      },
      {
        "command": "appRegistrations.showEndpoints",
        "title": "Endpoints"
      },
      {
        "command": "appRegistrations.renameApp",
        "title": "Rename"
      },
      {
        "command": "appRegistrations.deleteApp",
        "title": "Delete"
      },
      {
        "command": "appRegistrations.copyClientId",
        "title": "Copy Client ID"
      },
      {
        "command": "appRegistrations.openAppInPortal",
        "title": "Open In Portal"
      },
      {
        "command": "appRegistrations.editAudience",
        "title": "Edit"
      },
      {
        "command": "appRegistrations.copyValue",
        "title": "Copy"
      },
      {
        "command": "appRegistrations.openUserInPortal",
        "title": "Open In Portal"
      },
      {
        "command": "appRegistrations.addOwner",
        "title": "Add"
      },
      {
        "command": "appRegistrations.removeOwner",
        "title": "Remove"
      },
      {
        "command": "appRegistrations.refreshApps",
        "title": "Refresh",
        "icon": {
          "light": "resources/icons/light/refresh.svg",
          "dark": "resources/icons/dark/refresh.svg"
        }
      },
      {
        "command": "appRegistrations.addApp",
        "title": "Add",
        "icon": {
          "light": "resources/icons/light/add.svg",
          "dark": "resources/icons/dark/add.svg"
        }
      },
      {
        "command": "appRegistrations.filterApps",
        "title": "Filter",
        "icon": {
          "light": "resources/icons/light/filter.svg",
          "dark": "resources/icons/dark/filter.svg"
        }
      },
      {
        "command": "appRegistrations.tenantInfo",
        "title": "Tenant Information",
        "icon": {
          "light": "resources/icons/light/info.svg",
          "dark": "resources/icons/dark/info.svg"
        }
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "appRegistrations.filterApps",
          "when": "view == appRegistrations",
          "group": "navigation@0"
        },
        {
          "command": "appRegistrations.addApp",
          "when": "view == appRegistrations",
          "group": "navigation@1"
        },
        {
          "command": "appRegistrations.refreshApps",
          "when": "view == appRegistrations",
          "group": "navigation@2"
        },
        {
          "command": "appRegistrations.tenantInfo",
          "when": "view == appRegistrations",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "appRegistrations.uploadKeyCredential",
          "when": "view == appRegistrations && viewItem == CERTIFICATE-CREDENTIALS",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.deleteKeyCredential",
          "when": "view == appRegistrations && viewItem == CERTIFICATE",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.removeSingleScope",
          "when": "view == appRegistrations && viewItem == API-PERMISSIONS-SCOPE",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.addSingleScopeToExisting",
          "when": "view == appRegistrations && viewItem == API-PERMISSIONS-APP",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.addSingleScope",
          "when": "view == appRegistrations && viewItem == API-PERMISSIONS",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.removeApiScopes",
          "when": "view == appRegistrations && viewItem == API-PERMISSIONS-APP",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.addExposedApiScope",
          "when": "view == appRegistrations && viewItem == EXPOSED-API-PERMISSIONS",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.editExposedApiScope",
          "when": "view == appRegistrations && viewItem == SCOPE-DISABLED || viewItem == SCOPE-ENABLED",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.deleteExposedApiScope",
          "when": "view == appRegistrations && viewItem == SCOPE-DISABLED || viewItem == SCOPE-ENABLED",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.enableExposedApiScope",
          "when": "view == appRegistrations && viewItem == SCOPE-DISABLED",
          "group": "appRegistrations@2"
        },
        {
          "command": "appRegistrations.disableExposedApiScope",
          "when": "view == appRegistrations && viewItem == SCOPE-ENABLED",
          "group": "appRegistrations@2"
        },
        {
          "command": "appRegistrations.addAppRole",
          "when": "view == appRegistrations && viewItem == APP-ROLES",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.editAppRole",
          "when": "view == appRegistrations && viewItem == ROLE-DISABLED || viewItem == ROLE-ENABLED",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.deleteAppRole",
          "when": "view == appRegistrations && viewItem == ROLE-DISABLED || viewItem == ROLE-ENABLED",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.enableAppRole",
          "when": "view == appRegistrations && viewItem == ROLE-DISABLED",
          "group": "appRegistrations@2"
        },
        {
          "command": "appRegistrations.disableAppRole",
          "when": "view == appRegistrations && viewItem == ROLE-ENABLED",
          "group": "appRegistrations@2"
        },
        {
          "command": "appRegistrations.addRedirectUri",
          "when": "view == appRegistrations && viewItem == WEB-REDIRECT || viewItem == SPA-REDIRECT || viewItem == NATIVE-REDIRECT",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.deleteAllRedirectUris",
          "when": "view == appRegistrations && viewItem == WEB-REDIRECT || viewItem == SPA-REDIRECT || viewItem == NATIVE-REDIRECT",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.editRedirectUri",
          "when": "view == appRegistrations && viewItem == WEB-REDIRECT-URI || viewItem == SPA-REDIRECT-URI || viewItem == NATIVE-REDIRECT-URI",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.copyRedirectUri",
          "when": "view == appRegistrations && viewItem == WEB-REDIRECT-URI || viewItem == SPA-REDIRECT-URI || viewItem == NATIVE-REDIRECT-URI",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.deleteRedirectUri",
          "when": "view == appRegistrations && viewItem == WEB-REDIRECT-URI || viewItem == SPA-REDIRECT-URI || viewItem == NATIVE-REDIRECT-URI",
          "group": "appRegistrations@2"
        },
        {
          "command": "appRegistrations.addPasswordCredential",
          "when": "view == appRegistrations && viewItem == PASSWORD-CREDENTIALS",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.deletePasswordCredential",
          "when": "view == appRegistrations && viewItem == PASSWORD",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.renameApp",
          "when": "view == appRegistrations && viewItem == APPLICATION",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.deleteApp",
          "when": "view == appRegistrations && viewItem == APPLICATION",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.showEndpoints",
          "when": "view == appRegistrations && viewItem == APPLICATION",
          "group": "appRegistrations@2"
        },
        {
          "command": "appRegistrations.copyClientId",
          "when": "view == appRegistrations && viewItem == APPLICATION",
          "group": "appRegistrations@3"
        },
        {
          "command": "appRegistrations.openAppInPortal",
          "when": "view == appRegistrations && viewItem == APPLICATION",
          "group": "appRegistrations@4"
        },
        {
          "command": "appRegistrations.addOwner",
          "when": "view == appRegistrations && viewItem == OWNERS",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.removeOwner",
          "when": "view == appRegistrations && viewItem == OWNER",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.openUserInPortal",
          "when": "view == appRegistrations && viewItem == OWNER",
          "group": "appRegistrations@2"
        },
        {
          "command": "appRegistrations.viewAppManifest",
          "when": "view == appRegistrations && viewItem == APPLICATION",
          "group": "appRegistrations@4"
        },
        {
          "command": "appRegistrations.copyValue",
          "when": "view == appRegistrations && viewItem == COPY || viewItem == APPID-PARENT",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.editAudience",
          "when": "view == appRegistrations && viewItem == AUDIENCE || viewItem == AUDIENCE-PARENT",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.editAppIdUri",
          "when": "view == appRegistrations && viewItem == APPID-URI || viewItem == APPID-URI-PARENT",
          "group": "appRegistrations@0"
        },
        {
          "command": "appRegistrations.copyAppIdUri",
          "when": "view == appRegistrations && viewItem == APPID-URI",
          "group": "appRegistrations@1"
        },
        {
          "command": "appRegistrations.removeAppIdUri",
          "when": "view == appRegistrations && viewItem == APPID-URI",
          "group": "appRegistrations@2"
        }
      ]
    }
  },
  "scripts": {
    "package": "vsce package --out ./packages/",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@azure/identity-vscode": "^1.0.0",
    "@microsoft/microsoft-graph-types": "^2.25.0",
    "@types/glob": "^8.0.0",
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/jsonwebtoken": "^9.0.0",
    "@types/node": "16.x",
    "@types/node-forge": "^1.3.1",
    "@types/uuid": "^9.0.0",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^5.42.0",
    "@typescript-eslint/parser": "^5.42.0",
    "esbuild": "^0.16.15",
    "eslint": "^8.26.0",
    "glob": "^8.0.3",
    "typescript": "^4.8.4"
  },
  "dependencies": {
    "@azure/identity": "^3.1.2",
    "@microsoft/microsoft-graph-client": "^3.0.4",
    "date-fns": "^2.29.3",
    "fast-sort": "^3.2.0",
    "isomorphic-fetch": "^3.0.0",
    "node-forge": "^1.3.1",
    "ts-debounce": "^4.0.0",
    "uuid": "^9.0.0"
  }
}